name: Build, Test, and Publish

on:
  push:
    branches: [ main, Redraw ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production bundle
      run: npm run build
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          dist/
          !dist/**/*.map
    
    - name: Archive build artifacts with source maps
      uses: actions/upload-artifact@v4
      with:
        name: dist-with-maps
        path: dist/

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.js
          dist/*.css
        body: |
          ## JsAnimationTimeline ${{ github.ref_name }}
          
          Flash MX-style Timeline Control built with TypeScript and LESS.
          
          ### Installation
          Download the bundle and include in your HTML:
          ```html
          <script src="JsTimeLine.bundle.js"></script>
          <link rel="stylesheet" href="styles.css">
          ```
          
          ### Usage
          ```javascript
          const timeline = new JsTimeLine.TimelineControl({
            container: document.getElementById('timeline'),
            fps: 24,
            totalFrames: 100
          });
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true